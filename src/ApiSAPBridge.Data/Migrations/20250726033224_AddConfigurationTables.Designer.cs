// <auto-generated />
using System;
using ApiSAPBridge.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiSAPBridge.Data.Migrations
{
    [DbContext(typeof(ApiSAPBridgeDbContext))]
    [Migration("20250726033224_AddConfigurationTables")]
    partial class AddConfigurationTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiSAPBridge.Models.Articulo", b =>
                {
                    b.Property<int>("CODARTICULO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CODARTICULO"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DESCATALOGADO")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DESCRIPADIC")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("DPTO")
                        .HasColumnType("int");

                    b.Property<int?>("FAMILIA")
                        .HasColumnType("int");

                    b.Property<int?>("IMPUESTOCOMPRA")
                        .HasColumnType("int");

                    b.Property<string>("REFPROVEEDOR")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SECCION")
                        .HasColumnType("int");

                    b.Property<string>("TIPOARTICULO")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("TIPOIMPUESTO")
                        .HasColumnType("int");

                    b.Property<decimal?>("UDSTRASPASO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UNID1C")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UNID1V")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("USASTOCKS")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("CODARTICULO");

                    b.HasIndex("TIPOIMPUESTO");

                    b.HasIndex("DPTO", "SECCION", "FAMILIA")
                        .HasDatabaseName("IX_Articulos_Departamento");

                    b.ToTable("Articulos", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.ArticuloLinea", b =>
                {
                    b.Property<int>("CODARTICULO")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("TALLA")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(1);

                    b.Property<string>("COLOR")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("CODBARRAS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CODBARRAS2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CODBARRAS3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("COSTEMEDIO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("COSTESTOCK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DESCATALOGADO")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal?>("ULTIMOCOSTE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("CODARTICULO", "TALLA", "COLOR");

                    b.HasIndex("CODBARRAS")
                        .HasDatabaseName("IX_ArticuloLineas_CodigoBarras");

                    b.ToTable("ArticuloLineas", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Cliente", b =>
                {
                    b.Property<int>("CODCLIENTE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CODCLIENTE"));

                    b.Property<string>("ALIAS")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CIF")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CODCONTABLE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DIRECCION1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("E_MAIL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FACTURARCONIMPUESTO")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NOMBRECLIENTE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NOMBRECOMERCIAL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PAIS")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("POBLACION")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PROVINCIA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("RIESGOCONCEDIDO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("TELEFONO1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TELEFONO2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("CODCLIENTE");

                    b.HasIndex("E_MAIL")
                        .HasDatabaseName("IX_Clientes_Email");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Configuration.MethodConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsAutomaticSync")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastExecuted")
                        .HasColumnType("datetime2");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SyncIntervalMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("MethodName", "HttpMethod")
                        .IsUnique()
                        .HasDatabaseName("IX_MethodConfigurations_MethodHttpMethod");

                    b.ToTable("MethodConfigurations", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Configuration.SecurityConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LockedUntil")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("SecurityConfigurations", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Configuration.SqlConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConnectionTimeout")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Database")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Server")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("UseIntegratedSecurity")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Server", "Database")
                        .IsUnique()
                        .HasDatabaseName("IX_SqlConfigurations_ServerDatabase");

                    b.ToTable("SqlConfigurations", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Configuration.SwaggerConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("MethodName", "HttpMethod")
                        .IsUnique()
                        .HasDatabaseName("IX_SwaggerConfigurations_MethodHttpMethod");

                    b.ToTable("SwaggerConfigurations", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Configuration.SystemConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasDatabaseName("IX_SystemConfigurations_Key");

                    b.ToTable("SystemConfigurations", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Departamento", b =>
                {
                    b.Property<int>("NUMDPTO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NUMDPTO"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("NUMDPTO");

                    b.ToTable("Departamentos", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Entities.ApiLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EndpointCalled")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HttpMethod")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Level")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResponseStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_ApiLogs_Timestamp");

                    b.ToTable("ApiLogs", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Factura", b =>
                {
                    b.Property<string>("NUMSERIE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NUMSERIE");

                    b.Property<int>("NUMFACTURA")
                        .HasColumnType("int")
                        .HasColumnName("NUMFACTURA");

                    b.Property<int>("N")
                        .HasColumnType("int")
                        .HasColumnName("N");

                    b.Property<int>("CODCLIENTE")
                        .HasColumnType("int")
                        .HasColumnName("CODCLIENTE");

                    b.Property<int>("CODVENDEDOR")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("CODVENDEDOR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FECHA")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA");

                    b.Property<DateTime>("FECHACREADO")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREADO");

                    b.Property<DateTime>("FECHAMODIFICADO")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICADO");

                    b.Property<string>("TIPODOC")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TIPODOC");

                    b.Property<decimal>("TOTALBRUTO")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTALBRUTO");

                    b.Property<decimal>("TOTALIMPUESTOS")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTALIMPUESTOS");

                    b.Property<decimal>("TOTALNETO")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTALNETO");

                    b.Property<decimal>("TOTDTOCOMERCIAL")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTDTOCOMERCIAL");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("NUMSERIE", "NUMFACTURA", "N");

                    b.HasIndex("CODCLIENTE");

                    b.HasIndex("CODVENDEDOR");

                    b.ToTable("FACTURAS");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.FacturaDetalle", b =>
                {
                    b.Property<string>("SERIE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERIE");

                    b.Property<int>("NUMERO")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<int>("N")
                        .HasColumnType("int")
                        .HasColumnName("N");

                    b.Property<int>("LINEA")
                        .HasColumnType("int")
                        .HasColumnName("LINEA");

                    b.Property<int>("CODARTICULO")
                        .HasColumnType("int")
                        .HasColumnName("CODARTICULO");

                    b.Property<string>("COLOR")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COLOR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<decimal>("DTO")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("DTO");

                    b.Property<decimal>("PRECIO")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECIO");

                    b.Property<string>("REFERENCIA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("REFERENCIA");

                    b.Property<string>("TALLA")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TALLA");

                    b.Property<int>("TIPOIMPUESTO")
                        .HasColumnType("int")
                        .HasColumnName("TIPOIMPUESTO");

                    b.Property<decimal>("TOTAL")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL");

                    b.Property<decimal>("UNIDADESTOTAL")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("UNIDADESTOTAL");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SERIE", "NUMERO", "N", "LINEA");

                    b.HasIndex("CODARTICULO");

                    b.HasIndex("TIPOIMPUESTO");

                    b.ToTable("FACTURADETALLES");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.FacturaPago", b =>
                {
                    b.Property<string>("SERIE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERIE");

                    b.Property<int>("NUMERO")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<int>("N")
                        .HasColumnType("int")
                        .HasColumnName("N");

                    b.Property<int>("POSICION")
                        .HasColumnType("int")
                        .HasColumnName("POSICION");

                    b.Property<int>("CODTIPOPAGO")
                        .HasColumnType("int")
                        .HasColumnName("CODTIPOPAGO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPCION")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<decimal>("IMPORTE")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("IMPORTE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SERIE", "NUMERO", "N", "POSICION");

                    b.HasIndex("CODTIPOPAGO");

                    b.ToTable("FACTURAPAGOS");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Familia", b =>
                {
                    b.Property<int>("NUMDPTO")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("NUMSECCION")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("NUMFAMILIA")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("NUMDPTO", "NUMSECCION", "NUMFAMILIA");

                    b.HasIndex("NUMDPTO", "NUMSECCION")
                        .HasDatabaseName("IX_Familias_Seccion");

                    b.ToTable("Familias", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.FormaPago", b =>
                {
                    b.Property<int>("CODFORMAPAGO")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CODFORMAPAGO"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NUMVENCIMIENTOS")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("CODFORMAPAGO");

                    b.ToTable("FormasPago", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Impuesto", b =>
                {
                    b.Property<int>("TIPOIVA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TIPOIVA"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("TIPOIVA");

                    b.ToTable("Impuestos", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Precio", b =>
                {
                    b.Property<int>("IDTARIFAV")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CODARTICULO")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("TALLA")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(2);

                    b.Property<string>("COLOR")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("CODBARRAS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("DTO")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PBRUTO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PNETO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("IDTARIFAV", "CODARTICULO", "TALLA", "COLOR");

                    b.HasIndex("CODARTICULO");

                    b.HasIndex("IDTARIFAV")
                        .HasDatabaseName("IX_Precios_Tarifa");

                    b.ToTable("Precios", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Seccion", b =>
                {
                    b.Property<int>("NUMDPTO")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("NUMSECCION")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("NUMDPTO", "NUMSECCION");

                    b.HasIndex("NUMDPTO")
                        .HasDatabaseName("IX_Secciones_NUMDPTO");

                    b.ToTable("Secciones", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Tarifa", b =>
                {
                    b.Property<int>("IDTARIFAV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDTARIFAV"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FECHAFIN")
                        .HasColumnType("date");

                    b.Property<DateTime>("FECHAINI")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("IDTARIFAV");

                    b.ToTable("Tarifas", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Vendedor", b =>
                {
                    b.Property<int>("CODVENDEDOR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CODVENDEDOR"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("NOMBRE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("CODVENDEDOR");

                    b.ToTable("Vendedores", (string)null);
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Articulo", b =>
                {
                    b.HasOne("ApiSAPBridge.Models.Departamento", "Departamento")
                        .WithMany("Articulos")
                        .HasForeignKey("DPTO")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ApiSAPBridge.Models.Impuesto", "Impuesto")
                        .WithMany("Articulos")
                        .HasForeignKey("TIPOIMPUESTO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Impuesto");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.ArticuloLinea", b =>
                {
                    b.HasOne("ApiSAPBridge.Models.Articulo", "Articulo")
                        .WithMany("Lineas")
                        .HasForeignKey("CODARTICULO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Factura", b =>
                {
                    b.HasOne("ApiSAPBridge.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("CODCLIENTE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiSAPBridge.Models.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("CODVENDEDOR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.FacturaDetalle", b =>
                {
                    b.HasOne("ApiSAPBridge.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("CODARTICULO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiSAPBridge.Models.Impuesto", "Impuesto")
                        .WithMany()
                        .HasForeignKey("TIPOIMPUESTO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiSAPBridge.Models.Factura", "Factura")
                        .WithMany("Detalles")
                        .HasForeignKey("SERIE", "NUMERO", "N")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Factura");

                    b.Navigation("Impuesto");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.FacturaPago", b =>
                {
                    b.HasOne("ApiSAPBridge.Models.FormaPago", "FormaPago")
                        .WithMany()
                        .HasForeignKey("CODTIPOPAGO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiSAPBridge.Models.Factura", "Factura")
                        .WithMany("Pagos")
                        .HasForeignKey("SERIE", "NUMERO", "N")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("FormaPago");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Familia", b =>
                {
                    b.HasOne("ApiSAPBridge.Models.Seccion", "Seccion")
                        .WithMany("Familias")
                        .HasForeignKey("NUMDPTO", "NUMSECCION")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seccion");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Precio", b =>
                {
                    b.HasOne("ApiSAPBridge.Models.Articulo", "Articulo")
                        .WithMany("Precios")
                        .HasForeignKey("CODARTICULO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiSAPBridge.Models.Tarifa", "Tarifa")
                        .WithMany("Precios")
                        .HasForeignKey("IDTARIFAV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Tarifa");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Seccion", b =>
                {
                    b.HasOne("ApiSAPBridge.Models.Departamento", "Departamento")
                        .WithMany("Secciones")
                        .HasForeignKey("NUMDPTO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Articulo", b =>
                {
                    b.Navigation("Lineas");

                    b.Navigation("Precios");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Departamento", b =>
                {
                    b.Navigation("Articulos");

                    b.Navigation("Secciones");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Factura", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Impuesto", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Seccion", b =>
                {
                    b.Navigation("Familias");
                });

            modelBuilder.Entity("ApiSAPBridge.Models.Tarifa", b =>
                {
                    b.Navigation("Precios");
                });
#pragma warning restore 612, 618
        }
    }
}
